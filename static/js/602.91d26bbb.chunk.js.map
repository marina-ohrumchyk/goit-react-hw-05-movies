{"version":3,"file":"static/js/602.91d26bbb.chunk.js","mappings":"kNAAaA,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OACI,4BACI,0BACI,gBAAKC,IAAKD,EAAKE,aAAcC,IAAI,QAEzC,4BACI,uBAAIH,EAAKI,QACT,uCAAeJ,EAAKK,kBAI/B,E,kBCqBD,EA3Ba,WACT,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC1B,IAAMC,EAAWD,EAASE,KAAI,SAAAf,GAAS,IAAD,IAClC,MAAO,CACHE,aAAcF,EAAKE,aACnBE,KAAI,UAAEJ,EAAKI,YAAP,QAAe,GACnBC,UAAS,UAAEL,EAAKK,iBAAP,QAAoB,GAC7BW,GAAIhB,EAAKgB,GAEhB,IACDP,EAAQK,EACX,GACJ,GAAE,CAACR,IACiB,KAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,SAER,wBACGjB,GAAQA,EAAKe,KAAI,SAAAf,GAAI,OAAI,SAACD,EAAD,CAA2BC,KAAMA,GAAfA,EAAKgB,GAA3B,MAGP,KAAb,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,SACD,sEADT,CAED,C","sources":["components/Cast/CastDetails.jsx","components/Cast/Cast.jsx"],"sourcesContent":["export const CastDetails = ({ cast }) => {\n    return (\n        <div>\n            <div>\n                <img src={cast.profile_path} alt=\"\" />\n            </div>\n        <div>\n            <p>{cast.name}</p>\n            <p>Character: {cast.character}</p>\n        </div>\n        </div>\n  );\n}","import { getMovieCredits } from \"services/getApi\";\nimport { CastDetails } from 'components/Cast/CastDetails';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n\n    useEffect(() => {\n        getMovieCredits(movieId).then(response => {\n            const castInfo = response.map(cast => {\n                return {\n                    profile_path: cast.profile_path,\n                    name: cast.name ?? '',\n                    character: cast.character ?? '',\n                    id: cast.id,\n                };\n            })\n            setCast(castInfo);\n        });\n    }, [movieId]);\n    if (cast?.length !== 0)\n        return (\n      <ul>\n        {cast && cast.map(cast => <CastDetails key={cast.id} cast={cast} />)}\n      </ul>\n    );\n  if (cast?.length === 0)\n    return <p>We don't have any cast for this movie</p>;\n};\n\nexport default Cast;\n"],"names":["CastDetails","cast","src","profile_path","alt","name","character","movieId","useParams","useState","setCast","useEffect","getMovieCredits","then","response","castInfo","map","id","length"],"sourceRoot":""}