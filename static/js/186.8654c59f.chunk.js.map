{"version":3,"file":"static/js/186.8654c59f.chunk.js","mappings":"8LA+BA,UA3BgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACDF,IACDG,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC1BJ,EAAWI,EACd,GAER,GAAE,CAACR,EAASG,IAEW,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASM,SAEL,wBACKN,GAAWA,EAAQO,KAAI,SAAAC,GAAM,OAC1B,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOG,GADU,MAQpB,KAAb,OAAPX,QAAO,IAAPA,OAAA,EAAAA,EAASM,SACJ,0EADT,CAED,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from \"services/getApi\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        if (!reviews) {\n            getMovieReviews(movieId).then(response => {\n                setReviews(response);\n            });\n        }\n    }, [movieId, reviews])\n    \n    if (reviews?.length !== 0)\n        return (\n            <ul>\n                {reviews && reviews.map(review => (\n                    <li key={review.id}>\n                        <h2>Author:{review.author}</h2>\n                        <p>{review.content}</p>\n                    </li>\n                ))}\n            </ul>\n        );\n  if (reviews?.length === 0)\n    return <p>We don't have any reviews for this movie.</p>;\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","response","length","map","review","author","content","id"],"sourceRoot":""}